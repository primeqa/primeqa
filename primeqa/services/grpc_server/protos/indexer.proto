/**
 Copyright 2022-2023 PrimeQA Team

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

syntax = "proto3";
import "parameter.proto";
import "google/protobuf/struct.proto";

package index;

/**
    Service to build index
*/
service IndexingService {
    rpc GetIndexers(GetIndexersRequest) returns (GetIndexersResponse);
    rpc GenerateIndex(stream GenerateIndexRequest) returns (GenerateIndexResponse);
    rpc GetIndexStatus(GetIndexStatusRequest) returns (IndexStatusResponse);
    rpc GetIndexes(GetIndexesRequest) returns (GetIndexesResponse);
}

message Indexer {
    string indexer_id = 1;
    repeated parameter.Parameter parameters = 2;
}

message GetIndexersRequest {
}

message GetIndexersResponse {
    repeated Indexer indexers = 1;
}

message Document {
    string text = 1;
    string document_id = 2;
    string title = 3;
}

message GenerateIndexRequest {
    Indexer indexer = 1;
    repeated Document documents = 2;
    optional string index_id = 3;
    optional google.protobuf.Struct metadata = 4;
}

enum IndexStatus {
    READY = 0;
    INDEXING = 1;
    DOES_NOT_EXISTS = 2;
    CORRUPT = 3;
}

message GenerateIndexResponse {
    string index_id = 1;
    IndexStatus status = 2;
}

message GetIndexStatusRequest {
    string index_id = 1;
}

message IndexStatusResponse {
    IndexStatus status = 1;
}

message GetIndexesRequest {
    string engine_type = 1;
}

message IndexInformation {
    string index_id = 1;
    IndexStatus status = 2;
    google.protobuf.Struct configuration = 3;
    optional google.protobuf.Struct metadata = 4;
}

message GetIndexesResponse {
   repeated IndexInformation indexes = 1;
}