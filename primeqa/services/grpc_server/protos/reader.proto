syntax = "proto3";
import "parameter.proto";

package reader;

/**
   The service for getting readers and answer(s) to a question usign readers
*/
service Reader {
    rpc GetReaders (GetReadersRequest) returns (GetReadersResponse);
    rpc GetAnswers (GetAnswersRequest) returns (GetAnswersResponse);
}

message Reader {
    string reader_id = 1;
    repeated parameter.Parameter parameters = 2;
}

message GetReadersRequest {
}

message GetReadersResponse {
    repeated Reader readers = 1;
}

/**
    Given a pair of question and one or more context texts, returns up to max_num_answers answers
    for each context text.
*/
message GetAnswersRequest {
    Reader reader = 1;
    repeated string queries = 2;
    repeated Contexts contexts = 3;
}

message Contexts {
    repeated string texts = 1;
}

message Answer {
    string text = 1;
    uint32 start_char_offset = 2;
    uint32 end_char_offset = 3;
    double confidence_score = 4;
    uint32 context_index = 5;
};

message AnswersForContext {
    repeated Answer answers = 1;
}

message AnswersForQuery {
    repeated AnswersForContext context_answers = 1;
}

/**
    An answer or answers to a question containing the text,
    byte/token offsets, score and source passage index for each answer.
*/
message GetAnswersResponse {
    repeated AnswersForQuery query_answers = 1;
}

